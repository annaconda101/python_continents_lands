import unittest

from filmpond_exercise.filmpond_exercise import FilmpondChallenge

class TestFilmpondChallenge(unittest.TestCase):
    def test_all_land_connections(self):
        map = [
            ['+','+','+'],
            ['+','+','+'],
            ['+','+','+']
        ]
        fp = FilmpondChallenge()
        res = {}
        fp.get_connections(map, (1,1), res)
        self.assertEqual(res, { 
                                (1,1): [(0,0),(0,1),(0,2),(1,2),(2,2),(2,1),(2,0),(1,0)]
                              }
                        )
    
    def test_some_land_connections(self):
        map = [
            [' ','+','+'],
            [' ','+','+'],
            ['+',' ','+']
        ]
        fp = FilmpondChallenge()
        res = {}
        fp.get_connections(map, (1,1), res)
        self.assertEqual(res, { 
                                (1,1): [(0,1),(0,2),(1,2),(2,2),(2,0)]
                              }
                        )
    
    def test_edge_land_connections(self):
        map = [
            [' ','+','+'],
            [' ','+','+'],
            ['+',' ','+']
        ]
        fp = FilmpondChallenge()
        res = {}
        fp.get_connections(map, (0,2), res)
        self.assertEqual(res, { 
                                (0,2): [(1,2),(1,1),(0,1)]
                              }
                        )
    
    def test_all_land_connections_without_gaps(self):
        map = [
            ['+','+','+'],
            ['+','+','+'],
            ['+','+','+']
        ]
        fp = FilmpondChallenge()
        res = {}
        fp.get_all_connections(map, res)
        self.assertEqual(res, { 
                                (0,0): [(0,1),(1,1),(1,0)],
                                (0,1): [(0,2),(1,2),(1,1),(1,0),(0,0)],
                                (0,2): [(1,2),(1,1),(0,1)],
                                (1,0): [(0,0),(0,1),(1,1),(2,1),(2,0)],
                                (1,1): [(0,0),(0,1),(0,2),(1,2),(2,2),(2,1),(2,0),(1,0)],
                                (1,2): [(0,1),(0,2),(2,2),(2,1),(1,1)],
                                (2,0): [(1,0),(1,1),(2,1)],
                                (2,1): [(1,0),(1,1),(1,2),(2,2),(2,0)],
                                (2,2): [(1,1),(1,2),(2,1)]
                              }
                        )

    def test_all_land_connections_with_gaps(self):
        map = [
            [' ','+','+'],
            [' ','+','+'],
            ['+',' ','+']
        ]
        fp = FilmpondChallenge()
        res = {}
        fp.get_all_connections(map, res)
        self.assertEqual(res, { 
                                (0,1): [(0,2),(1,2),(1,1)],
                                (0,2): [(1,2),(1,1),(0,1)],
                                (1,1): [(0,1),(0,2),(1,2),(2,2),(2,0)],
                                (1,2): [(0,1),(0,2),(2,2),(1,1)],
                                (2,0): [(1,1)],
                                (2,2): [(1,1),(1,2)]
                              }
                        )

    def test_single_continent(self): 
        map = [
            ['+','+','+'],
            ['+','+','+'],
            ['+','+','+']
        ]
        fp = FilmpondChallenge()
        connections = {}
        fp.get_all_connections(map, connections)
        positions = []
        fp.get_continent(connections, (0,0), positions)
        self.assertEqual(positions, [ (0,0), (0,1), (0,2), (1,2), (2,2), (1,1), (2,1), (1,0), (2,0) ])

    def test_multiple_continents(self):
        map = [
            ['+','+',' ','+'],
            ['+',' ',' ','+'],
            ['+','+',' ',' '],
            [' ',' ',' ',' '],
            ['+','+','+',' '],
            ['+','+','+',' ']
        ]
        fp = FilmpondChallenge()
        connections = {}
        fp.get_all_connections(map, connections)
        continents = []
        fp.get_continents(connections, continents)
        self.assertEqual(continents, [[(0, 1), (1, 0), (0, 0), (2, 1), (2, 0)], [(5, 2), (4, 1), (4, 2), (5, 1), (4, 0), (5, 0)], [(1, 3), (0, 3)]])

    def test_parse_some_lines(self):
        fp = FilmpondChallenge()
        file_path = 'test/fixtures/map_small_sample.txt'
        map = []
        fp.parse_file(file_path, map)
        self.assertEqual(map, [
                                [' ','1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1',' '],
                                [' ','2',' ',' ','+','+','+','+',' ','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+',' ','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+',' ','+',' ',' ',' ',' ','2',' '],
                             ]
                        )
   
    def test_parse_sample_file(self):
        fp = FilmpondChallenge()
        file_path = 'test/fixtures/map.txt'
        map = []
        fp.parse_file(file_path, map)
        self.assertEqual(map, [
                       [' ','1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1',' '],
                       [' ','2',' ',' ','+','+','+','+',' ','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+',' ','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+',' ','+',' ',' ',' ',' ','2',' '],
                       [' ','3',' ',' ','+','+','+',' ','+',' ','+','+','+',' ',' ',' ','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ','3',' '],
                       [' ','4',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ','+','+',' ',' ',' ',' ',' ','+','+','+',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ','4',' '],
                       [' ','5',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ','+','+',' ',' ',' ',' ',' ','+','+','+','+',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ','5',' '],
                       [' ','6',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ','+',' ',' ',' ',' ',' ','+','+','+','+','+',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ','6',' '],
                       [' ','7',' ',' ','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ','+','+','+','+',' ',' ',' ','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ','7',' '],
                       [' ','8',' ',' ','+',' ','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ','+','+','+','+',' ',' ',' ','+','+','+','+','+',' ',' ','+','+','+',' ',' ',' ',' ',' ',' ',' ','8',' '],
                       [' ','9',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ','+','+','+',' ',' ',' ',' ','+','+','+','+','+',' ',' ','+','+','+',' ',' ',' ',' ',' ',' ',' ','9',' '],
                       ['1','0',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ','+','+','+',' ',' ','+','+','+','+','+',' ',' ',' ','+','+','+',' ',' ',' ',' ',' ',' ','1','0'],
                       ['1','1',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ','+','+','+','+','+','+','+',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ','+','+','+','+','+','+','+','+','+','+',' ',' ',' ','+','+','+','+',' ',' ',' ',' ',' ','1','1',' '],
                       ['1','2',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ','+','+','+','+','+','+','+','+',' ','+','+','+','+','+','+','+',' ',' ',' ',' ',' ','1','2',' '],
                       ['1','3',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1','3',' '],
                       ['1','4',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ','+','+','+','+',' ',' ',' ','+','+','+','+','+','+','+','+','+','+',' ','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1','4',' '],
                       ['1','5',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+',' ',' ',' ','+','+','+','+','+',' ',' ',' ',' ','+','+','+','+',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+',' ',' ','+','+','+','+','+','+','+','+',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1','5',' '],
                       ['1','6',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ','+','+','+','+','+',' ',' ',' ','+','+','+','+',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ','+','+','+','+','+',' ',' ',' ','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1','6',' '],
                       ['1','7',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+',' ',' ',' ','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+',' ',' ',' ','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1','7',' '],
                       ['1','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+',' ',' ',' ','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+',' ',' ',' ','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1','8',' '],
                       ['1','9',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+',' ','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+',' ','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','1','9',' '],
                       ['2','0',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','2','0',' '],
                       ['2','1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','2','1',' '],
                       ['2','2',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','2','2',' '],
                       ['2','3',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','2','3',' '],
                       ['2','4',' ',' ',' ','+','+','+',' ','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','2','4',' '],
                       ['2','5',' ',' ',' ','+','+','+','+','+','+','+','+','+',' ',' ',' ','+','+',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','2','5',' '],
                       ['2','6',' ',' ',' ',' ','+','+','+','+','+','+','+','+',' ',' ',' ','+','+',' ',' ',' ',' ',' ','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','2','6',' '],
                       ['2','7',' ',' ',' ',' ','+','+','+','+','+','+','+','+',' ',' ',' ','+','+','+','+',' ',' ',' ',' ','+','+','+','+','+','+','+',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','2','7',' '],
                       ['2','8',' ',' ',' ',' ','+','+','+','+','+','+','+','+',' ',' ',' ','+','+','+','+',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+',' ','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ','+',' ',' ','+','+','+','+',' ',' ',' ',' ','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','2','8',' '],
                       ['2','9',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','2','9',' '],
                       ['3','0',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ','+','+','+',' ','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ','+','+','+','+','+','+','+','+',' ',' ',' ',' ','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','3','0',' '],
                       ['3','1',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','3','1',' '],
                       ['3','2',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+',' ',' ','+','+','+','+','+','+',' ',' ',' ','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','3','2',' '],
                       ['3','3',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ','+','+','+','+','+',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','3','3',' '],
                       ['3','4',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ','+','+','+','+','+',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','3','4',' '],
                       ['3','5',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','3','5',' '],
                       ['3','6',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ','+','+','+','+',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','3','6',' '],
                       ['3','7',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ','+','+',' ',' ',' ',' ','+','+','+',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','3','7',' '],
                       ['3','8',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','3','8',' '],
                       ['3','9',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ','+','+',' ','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','3','9',' '],
                       ['4','0',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','4','0',' '],
                       ['4','1',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','4','1',' '],
                       ['4','2',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','4','2',' '],
                       ['4','3',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ','+','+','+','+','+',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','4','3',' '],
                       ['4','4',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ','+','+','+','+',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','4','4'],
                       ['4','5',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ','+','+','+','+',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','4','5',' '],
                       ['4','6',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ','+','+',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+',' ','+','+','+','+','+','+','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','4','6'],
                       ['4','7',' ',' ',' ',' ',' ',' ',' ',' ','+','+',' ',' ','+','+','+','+','+','+',' ',' ',' ',' ','+','+','+','+',' ',' ',' ',' ',' ','+','+',' ',' ',' ',' ',' ',' ',' ',' ','+','+',' ',' ','+',' ',' ',' ','+','+',' ','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','4','7'],
                       ['4','8',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+',' ',' ',' ',' ',' ',' ',' ','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','4','8',' '],
                       ['4','9',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','4','9',' '],
                       ['5','0',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','5','0']
                        ])


    
    def test_clean_some_lines(self):
        fp = FilmpondChallenge()
        file_path = 'test/fixtures/map_small_sample.txt'
        map = []
        fp.parse_file(file_path, map)
        clean_map = []
        fp.clean_map(map, clean_map)
        self.assertEqual(clean_map, [
                                [' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' '],
                                [' ','+','+','+','+',' ','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+',' ','+','+','+','+',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','+','+','+','+','+','+','+','+','+',' ','+',' ',' ',' '],
                             ]
                        )

    def test_get_continents_from_file_path(self):
        fp = FilmpondChallenge()
        file_path = 'test/fixtures/map.txt'
        continents = []
        fp.get_continents_from_file_path(file_path, continents)
        self.assertEqual(len(continents), 3) 
